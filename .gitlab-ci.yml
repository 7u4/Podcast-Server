
variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  MAVEN_USER_HOME: $CI_PROJECT_DIR/.m2

stages:
  - ‚¨á download
  - üß™ test
  - üë∑‚Äç build
  - üê≥ packaging

‚¨á backend:
  stage: ‚¨á download
  image: openjdk:8
  script:
    - ./mvnw $MAVEN_CLI_OPTS -f backend/pom.xml dependency:resolve dependency:resolve-plugins
  cache:
    key: "$CI_PIPELINE_ID-backend"
    policy: push
    paths:
      - .m2/

‚¨á ui-v1:
  stage: ‚¨á download
  image: openjdk:8
  script:
    - ./mvnw $MAVEN_CLI_OPTS -f frontend-angularjs/pom.xml frontend:install-node-and-npm frontend:npm@npm-install frontend:jspm@jspm-config frontend:jspm@jspm-install -Djspm_token=$JSPM_GITHUB_AUTH_TOKEN
  cache:
    key: "$CI_PIPELINE_ID-ui-v1"
    policy: push
    paths:
      - frontend-angularjs/node_modules/
      - frontend-angularjs/www/jspm_packages/
      - frontend-angularjs/target/
      - .m2/

‚¨á ui-v2:
  stage: ‚¨á download
  image: node:11
  script:
    - yarn --cwd frontend-angular
  cache:
    key: "$CI_PIPELINE_ID-ui-v2"
    policy: push
    paths:
      - .yarn
      - frontend-angular/node_modules/

üß™ backend:
  stage: üß™ test
  image: openjdk:8
  script:
    - ./mvnw $MAVEN_CLI_OPTS -f backend/pom.xml liquibase:dropAll liquibase:update jooq-codegen:generate test -Ddatabase.url=jdbc:h2:/tmp/podcast-server jacoco:report
    - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
  cache:
    key: "$CI_PIPELINE_ID-backend"
    policy: pull
    paths:
      - .m2/

üß™ ui-v2:
  stage: üß™ test
  image: node:11
  script:
    - yarn --cwd frontend-angular test
  cache:
    key: "$CI_PIPELINE_ID-ui-v2"
    policy: pull
    paths:
      - .yarn
      - frontend-angular/node_modules/

.üë∑ backend-base-image:
  stage: üë∑‚Äç build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "$DOCKER_IO_PASSWORD" | docker login -u "$DOCKER_IO_USER" --password-stdin
  script:
    - docker build -t davinkevin/podcast-server:base-image -f backend/src/main/docker/base-image/Dockerfile .
    - docker push davinkevin/podcast-server:base-image
  allow_failure: true

üë∑ backend:
  stage: üë∑‚Äç build
  image: openjdk:8
  script:
    - ./mvnw $MAVEN_CLI_OPTS -f backend/pom.xml liquibase:dropAll liquibase:update jooq-codegen:generate package -Ddatabase.url=jdbc:h2:/tmp/podcast-server
  artifacts:
    paths:
      - backend/target/Podcast-Server.jar
  cache:
    key: "$CI_PIPELINE_ID-backend"
    policy: pull
    paths:
      - .m2/

üë∑ ui-v1:
  stage: üë∑‚Äç build
  image: openjdk:8
  script:
    - ./mvnw $MAVEN_CLI_OPTS -f frontend-angularjs/pom.xml frontend:gulp@build-less frontend:gulp@build-app
  artifacts:
    paths:
      - frontend-angularjs/target/dist/
  cache:
    key: "$CI_PIPELINE_ID-ui-v1"
    policy: pull
    paths:
      - frontend-angularjs/node_modules/
      - frontend-angularjs/www/jspm_packages/
      - frontend-angularjs/target/

üë∑ ui-v2:
  stage: üë∑‚Äç build
  image: node:11
  script:
    - yarn --cwd frontend-angular build
  artifacts:
    paths:
      - frontend-angular/dist/
  cache:
    key: "$CI_PIPELINE_ID-ui-v2"
    policy: pull
    paths:
      - .yarn
      - frontend-angular/node_modules/

üê≥ backend:
  stage: üê≥ packaging
  image: openjdk:8
  script:
    - ./mvnw $MAVEN_CLI_OPTS -f backend/pom.xml liquibase:dropAll liquibase:update jooq-codegen:generate compile jib:build -Ddatabase.url=jdbc:h2:/tmp/podcast-server -Dtag=${CI_COMMIT_TAG:-$CI_COMMIT_REF_SLUG}
  cache:
    key: "$CI_PIPELINE_ID-backend"
    policy: pull
    paths:
      - .m2/
