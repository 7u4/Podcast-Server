apiVersion: v1
kind: Service
metadata:
  name: podcast-server
  labels:
    app: podcast-server
spec:
  ports:
    - name: http-podcast-server-port
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: podcast-server
    module: backend
    serving: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podcast-server
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      run: podcast-server
      app: podcast-server
      serving: "true"
  template:
    metadata:
      labels:
        run: podcast-server
        app: podcast-server
        module: backend
        serving: "true"
    spec:
      containers:
        - image: podcastserver/backend
          name: app
          ports:
            - name: http-port
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: podcast-server-update-and-download
spec:
  schedule: "0 * * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: podcast-server-update-and-download
              image: tutum/curl
              args:
                - /bin/sh
                - -c
                - curl -qsL podcast-server.tk/api/v1/podcasts/update?download=true
          restartPolicy: OnFailure
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: podcast-server-delete-old-covers
spec:
  schedule: "30 4 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: podcast-server-delete-old-covers
              image: tutum/curl
              imagePullPolicy: IfNotPresent
              args:
                - /bin/sh
                - -c
                - curl -qsL -X DELETE http://podcast-server.podcast-server.svc.cluster.local:8080/api/v1/covers
          restartPolicy: OnFailure
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: podcast-server-delete-old-items
spec:
  schedule: "30 5 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: podcast-server-delete-old-items
              image: tutum/curl
              imagePullPolicy: IfNotPresent
              args:
                - /bin/sh
                - -c
                - curl -qsL -X DELETE http://podcast-server.podcast-server.svc.cluster.local:8080/v1/items/clean
          restartPolicy: OnFailure
